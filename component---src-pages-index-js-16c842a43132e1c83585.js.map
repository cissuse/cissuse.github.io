{"version":3,"file":"component---src-pages-index-js-16c842a43132e1c83585.js","mappings":"mJA4CA,IAlCA,SAAYA,GAAoC,IAADC,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAEC,EAAK,SAAEC,GAAUL,EAC3C,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBG,MAExC,OACEO,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQD,EAAe,GAAGN,OAAWM,IAAiBN,GACtDO,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAAST,IACnCO,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,SAA0B,QAAjBX,EAAAI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBa,SAAU,KACnEJ,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAAST,IACpCO,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASL,IACzCH,EAGP,C,2IChCA,MA2DaW,EAAOA,IAAML,EAAAA,cAACM,EAAAA,EAAG,CAACb,MAAM,SAErC,UA5DkBc,KAChB,MAAMC,GAAcZ,EAAAA,EAAAA,gBAAe,cAmB7Ba,EAAaD,EAAYE,OAAOC,WAChCC,EAAUC,KAAKC,KAAKL,EAtBV,GAgChB,OACET,EAAAA,cAACe,EAAAA,EAAM,KACLf,EAAAA,cAACgB,EAAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,GAAI,CAAEC,GAAI,IACnCZ,EAAYE,OAAOW,MAAMC,IAAIjC,IAAA,IAAC,KAAEkC,GAAMlC,EAAA,OACrCW,EAAAA,cAACgB,EAAAA,EAAI,CAACQ,IAAKD,EAAKE,GAAIC,KAAM,IACxB1B,EAAAA,cAAC2B,EAAAA,EAAW,CACVC,IAAKL,EAAKM,YAAYD,IACtBE,KAAMP,EAAKM,YAAYC,KACvBrC,MAAO8B,EAAKM,YAAYpC,MACxBsC,KAAMR,EAAKM,YAAYE,KACvBC,QAAST,EAAKS,QACdR,IAAKD,EAAKE,QAIhBzB,EAAAA,cAACgB,EAAAA,EAAI,KACHhB,EAAAA,cAACiC,EAAAA,EAAU,CACTC,MAAOtB,EACPuB,YAAa,EACbC,SAAUA,CAACC,EAAOC,KA3BHC,MACX,KADWA,EA2B6BD,IAzBlDE,EAAAA,EAAAA,UAAS,MAETA,EAAAA,EAAAA,UAAS,IAAID,W","sources":["webpack://cissuse.github.io/./src/components/seo.js","webpack://cissuse.github.io/./src/pages/index.js"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { navigate } from \"gatsby\"\r\nimport Pagination from \"@mui/material/Pagination\"\r\nimport Grid from \"@mui/material/Grid\"\r\nimport ArticleInfo from \"../components/home/articleInfo\"\r\n\r\nconst PAGE_SIZE = 1\r\nconst IndexPage = () => {\r\n  const articleList = useStaticQuery(graphql`\r\n    query {\r\n      allMdx(limit: 30, skip: 0) {\r\n        totalCount\r\n        edges {\r\n          node {\r\n            id\r\n            frontmatter {\r\n              date\r\n              slug\r\n              title\r\n              tag\r\n            }\r\n            excerpt\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  const articleNum = articleList.allMdx.totalCount\r\n  const pageNum = Math.ceil(articleNum / PAGE_SIZE)\r\n\r\n  const handlePageChange = cur => {\r\n    if (cur === 1) {\r\n      navigate(\"/\")\r\n    } else {\r\n      navigate(`/${cur}`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Grid container spacing={2} sx={{ mt: 2 }}>\r\n        {articleList.allMdx.edges.map(({ node }) => (\r\n          <Grid key={node.id} size={12}>\r\n            <ArticleInfo\r\n              tag={node.frontmatter.tag}\r\n              slug={node.frontmatter.slug}\r\n              title={node.frontmatter.title}\r\n              date={node.frontmatter.date}\r\n              excerpt={node.excerpt}\r\n              key={node.id}\r\n            />\r\n          </Grid>\r\n        ))}\r\n        <Grid>\r\n          <Pagination\r\n            count={pageNum}\r\n            defaultPage={1}\r\n            onChange={(event, page) => handlePageChange(page)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"Home\" />\r\n\r\nexport default IndexPage\r\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author","Head","Seo","IndexPage","articleList","articleNum","allMdx","totalCount","pageNum","Math","ceil","Layout","Grid","container","spacing","sx","mt","edges","map","node","key","id","size","ArticleInfo","tag","frontmatter","slug","date","excerpt","Pagination","count","defaultPage","onChange","event","page","cur","navigate"],"sourceRoot":""}